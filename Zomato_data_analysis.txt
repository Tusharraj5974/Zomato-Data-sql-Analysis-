/* 
Q1: What is the total amount each customer spent on zomato?
Q2: How many days has each customer visited zomato?
Q3: What was the first product purchased by each customer?
Q4: What is the most purchased item on the menu & how many times was it purchased by all customers?
Q5: Which item was most popular for each customer?
Q6: Which item was purchased first by customers after they become a member?
Q7: What are the total orders and amount spent for each member after they become a member? */

create database Zomato_sql_project;
use zomato_sql_project;

drop table if exists product;
CREATE TABLE product(product_id integer,product_name text,price integer); 

INSERT INTO product(product_id,product_name,price) 
 VALUES
(1,'p1',980),
(2,'p2',870),
(3,'p3',330);
drop table if exists sales;
CREATE TABLE sales(userid integer,created_date varchar(30),product_id integer); 

INSERT INTO sales(userid,created_date,product_id) 
 VALUES (1,'04-19-2017',2),
(3,'12-18-2019',1),
(2,'07-20-2020',3),
(1,'10-23-2019',2),
(1,'03-19-2018',3),
(3,'12-20-2016',2),
(1,'11-09-2016',1),
(1,'05-20-2016',3),
(2,'09-24-2017',1),
(1,'03-11-2017',2),
(1,'03-11-2016',1),
(3,'11-10-2016',1),
(3,'12-07-2017',2),
(3,'12-15-2016',2),
(2,'11-08-2017',2),
(2,'09-10-2018',3);

drop table if exists goldusers_signup;
CREATE TABLE goldusers_signup(userid integer,gold_signup_date varchar(30)); 

INSERT INTO goldusers_signup(userid,gold_signup_date) 
 VALUES (1,'09-22-2017'),
(3,'04-21-2017');

drop table if exists users;
CREATE TABLE users(userid integer,signup_date varchar(30)); 

INSERT INTO users(userid,signup_date) 
 VALUES (1,'09-02-2014'),
(2,'01-15-2015'),
(3,'04-11-2014');

select * from sales;
select * from product;
select * from goldusers_signup;
select * from users;

-- Solutions begin from Here

Solution1:
select s.userid,sum(p.price) as Total_amount from sales s inner join 
product p on s.product_id=p.product_id group by s.userid;


Solution2:
select s.userid, count(distinct created_date)
 from sales s group by s.userid
 
 
 Solution3:
 select * from (
 select *, Dense_rank() over (partition by userid order by created_date) RN from sales
 ) T
 where RN=1


Solution4:
select product_id, count(product_id) PI
       from sales 
       group by product_id
       order by count(product_id) 
       desc limit 3;
 
 
 Solution5:
with cte
as
( select userid, product_id, count(product_id) over (partition by userid, product_id) as cnt
 from sales ),
 cte1 as
 (select *, row_number() over (partition by userid order by cnt desc) as rn1 from cte) 
 select * from cte1 
 
 
 Solution6:
 with cte As
( select u.userid, u.signup_date, s.product_id, s.created_date  from sales s
 inner join users u on
 s.userid = u.userid
 AND s.created_date >= u.signup_date )
 select * from
( select * , row_number() over (partition by userid order by created_date) rn from cte ) T
where rn =1 ;



Solution7:
 with cte As
( select u.userid, u.signup_date, s.product_id, s.created_date  from sales s
 inner join users u on
 s.userid = u.userid
 AND s.created_date >= u.signup_date )
 select userid, count(created_date), sum(price)  from
( select userid, signup_date, p.product_id, created_date, p.price from cte as c 
inner join product p on c.product_id = p.product_id  ) as T
group by userid

